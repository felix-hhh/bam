networks:
  custom_network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
services:
  webapp:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web-service
    image: web-service:1.1.0
    restart: always
    networks:
      custom_network:
        ipv4_address: 172.20.0.3
    ports:
      - "14444:80"
  server:
    build:
      context: ./admin/app/
      dockerfile: Dockerfile
    container_name: admin-service
    image: admin-service:1.0.2
    restart: always
    networks:
      custom_network:
        ipv4_address: 172.20.0.4
    volumes:
      - /opt/server/log:/var/log/server
#    depends_on:
#      - database
#      - cache
    ports:
      - "10000:10000"
  nginx:
    container_name: nginx
    image: nginx:1.25.2-alpine
    restart: always
    deploy:
      resources:
        limits:
          memory: 32m
        reservations:
          memory: 32m
    networks:
      custom_network:
        ipv4_address: 172.20.0.2
    volumes:
      - /opt/nginx/log:/var/log/nginx
      - /opt/nginx/conf/conf.d:/etc/nginx/conf.d
      - /opt/nginx/key:/etc/nginx/key
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "80:80"
      - "443:443"
  store:
    container_name: minio
    image: minio/minio
    restart: always
    deploy:
      resources:
        limits:
          memory: 256m
    hostname: minio
    volumes:
      - /opt/docker/data/minio/data:/data
      - /opt/docker/data/minio/config:/root/.minio
    environment:
      - MINIO_ACCESS_KEY=felix
      - MINIO_SECRET_KEY=qq1231ww
      - MINIO_BROWSER_DEFAULT_LOCALE=zh_CN
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
  cache:
    container_name: redis5.0
    image: redis:5-alpine
    restart: always
    deploy:
      resources:
        limits:
          memory: 64m
    hostname: redis
    ports:
      - "16379:6379"
    volumes:
      - /opt/docker/data/redis/data:/data
      - /opt/docker/data/redis/conf:/etc/redis
    environment:
      - TZ=Asia/Shanghai
      - USER_UID=1000
      - USER_GID=$USER_UID
    entrypoint: redis-server
    command:
      - /etc/redis/redis.conf
  database:
    container_name: mysql8.0
    image: mysql:8.4.2
    restart: always
    deploy:
      resources:
        limits:
          memory: 256m
    hostname: mysql
    ports:
      - "13306:3306"
      - "33060:33060"
    volumes:
      - /opt/docker/data/mysql/data:/var/lib/mysql
      - /opt/docker/data/mysql/secure_file:/var/lib/mysql-files
      - /opt/docker/data/mysql/conf:/etc/mysql/my.cnf
    environment:
      - USER_UID=1000
      - USER_GID=$USER_UID
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=project